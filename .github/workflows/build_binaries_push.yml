name: cli_gen_tool build latest binaries CI 

on: 
  push:
    branches:
      - main
    paths:
      - tools/cli_gen_tool_src
  workflow_dispatch:
    branches:
      - main
    paths:
      - tools/cli_gen_tool_src

jobs:
  build-latest-binary:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest

    steps:
      - name: Update linux and install build dependencies
        run: |
          sudo add-apt-repository -y "deb http://cz.archive.ubuntu.com/ubuntu jammy main universe"
          sudo apt-get -q update           
          sudo apt-get install libegl1
          sudo apt-get install libxkbcommon0
          sudo apt-get install libxkbcommon-x11-dev
          sudo apt-get install '^libxcb.*-dev'
          sudo apt-get install libx11-xcb-dev
          sudo apt-get install libglu1-mesa-dev
          sudo apt-get install libxrender-dev
          sudo apt-get install libxkbcommon-dev                
          sudo apt-get install libicu70          
          sudo apt-get install qt6-webengine-dev
                                    
      - uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Python dependencies
        run: |
          python -VV          
          pip install -r ./tools/cli_gen_tool_src/requirements.txt
          pip freeze                    
      
      - name: Build binary
        run: |                    
          pyinstaller -y ./tools/cli_gen_tool_src/cli_gen_tool.py --distpath ./tools/bin/latest/    
        
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          if [-z "$(git status --porcelain)"]; then
            echo "::set-output name=push::false"
          else
            git commit -m "cli_gen_tool binary latest" -a
            echo "::set-output name=push::true"
          fi
        shell: bash

      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
name: PlatformIO esp CI 

on: 
  push:
    branches:
      - main
    paths:
      - '**/examples/all_platforms/basic/GetCommandFromStream/'
      - '**/examples/all_platforms/advanced/GetCommandFromStream/'
  workflow_dispatch:
    branches:
      - main
    paths:
      - '**/examples/all_platforms/basic/GetCommandFromStream/'
      - '**/examples/all_platforms/advanced/GetCommandFromStream/'
  release:
    branches:
      - release
    paths:
      - '**/examples/all_platforms/basic/GetCommandFromStream/'
      - '**/examples/all_platforms/advanced/GetCommandFromStream/'
      
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [examples/all_platforms/advanced/GetCommandFromStream/GetCommandFromStream.ino, 
                  examples/all_platforms/basic/GetCommandFromStream/GetCommandFromStream.ino]

    steps:
    - uses: actions/checkout@v3
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        wget https://github.com/dstroy0/InputHandler/archive/main.zip -O /tmp/InputHandler-main.zip
        unzip /tmp/InputHandler-main.zip -d /tmp
    - name: Run PlatformIO
      run: pio ci --lib="." 
                  --lib="/tmp/InputHandler-main/"                  
                  --board=esp32dev 
                  --board=huzzah 

      env:
        PLATFORMIO_CI_SRC: ${{ matrix.example }}
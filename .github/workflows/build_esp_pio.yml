name: ESP build examples (PIO)

on: 
  push:
    branches:
      - main
    paths:
      - '**/examples/all_platforms/basic/GetCommandFromStream/**'
      - '**/examples/all_platforms/advanced/GetCommandFromStream/**'      
      - '**/examples/all_platforms/advanced/NestedCommands/**'
      - '**/examples/all_platforms/basic/WildcardCommands/**'
  workflow_dispatch:
    branches:
      - main
    paths:
      - '**/examples/all_platforms/basic/GetCommandFromStream/**'
      - '**/examples/all_platforms/advanced/GetCommandFromStream/**'      
      - '**/examples/all_platforms/advanced/NestedCommands/**'
      - '**/examples/all_platforms/basic/WildcardCommands/**'
  release:
    branches:
      - release
    paths:
      - '**/examples/all_platforms/basic/GetCommandFromStream/**'
      - '**/examples/all_platforms/advanced/GetCommandFromStream/**'      
      - '**/examples/all_platforms/advanced/NestedCommands/**'
      - '**/examples/all_platforms/basic/WildcardCommands/**'

jobs:  
  build-examples:
    concurrency: 
      group: ci-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    strategy:
      matrix:        
        examples: ['examples/all_platforms/advanced/GetCommandFromStream/GetCommandFromStream.ino', 
                  'examples/all_platforms/basic/GetCommandFromStream/GetCommandFromStream.ino',                  
                  'examples/all_platforms/advanced/NestedCommands/NestedCommands.ino',
                  'examples/all_platforms/basic/WildcardCommands/WildcardCommands.ino']

    steps:
    - uses: actions/checkout@v3
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        wget --no-check-certificate https://github.com/dstroy0/InputHandler/archive/main.zip -O /tmp/InputHandler-main.zip
        unzip /tmp/InputHandler-main.zip -d /tmp        
        ls
    
    env:
      PLATFORMIO_CI_SRC: ${{ matrix.examples }}
    
    - name: Build PlatformIO ESP32
      run: pio ci --lib="/tmp/InputHandler-main/"                  
                  --board=esp32dev                         
    
    - name: Build PlatformIO ES8266
      run: pio ci --lib="/tmp/InputHandler-main/"                  
                  --board=huzzah 

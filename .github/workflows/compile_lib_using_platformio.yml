name: Build lib with platformio

on:
  workflow_call:
    inputs:
      compiler:
        required: true
        type: string
      platform:
        required: true
        type: string
      build-matrix:
        required: true
        type: string

jobs:
  build-library-using-platformio:
    needs: generate-job-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # extract the boards that need to be built from the build matrix
        boards: ${{ fromJSON(${{ inputs.build-matrix }})['boards'] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio    
          ls

      - name: Compile examples
        env:
          examples: ${{ toJSON(fromJSON(${{ inputs.build-matrix }})['examples']) }}
        run: |
          arrstring=$(echo $examples | sed -e 's/\[ //g' -e 's/\ ]//g' -e 's/\,//g')
          arr=( $arrstring )
          for item in "${arr[@]}"
          do
            example_src=${item//\"/}
            echo "Compiling $example_src for ${{matrix.boards}}"
            pio ci --lib="." --board="${{matrix.boards}}" --verbose "$GITHUB_WORKSPACE/$example_src"
          done

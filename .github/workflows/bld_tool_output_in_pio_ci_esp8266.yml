name: Build tool test_output_cli esp8266 (PIO)

on:
  push:
    branches:
      - main
    paths:
      - "**/interfaces/test_output_cli/pio_ci/**"
  workflow_dispatch:
    branches:
      - main
    paths:
      - "**/interfaces/test_output_cli/pio_ci/**"
  release:
    branches:
      - release
    paths:
      - "**/interfaces/test_output_cli/pio_ci/**"

jobs:
  build-examples-matrix:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        examples: ["**/main.cpp"]

    steps:
      - uses: actions/checkout@v3
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          wget --no-check-certificate https://github.com/dstroy0/InputHandler/archive/main.zip -O /tmp/InputHandler-main.zip
          unzip /tmp/InputHandler-main.zip -d /tmp        
          echo moving to test interface directory     
          cd ../InputHandler/tools/interfaces/test_output_cli/pio_ci/                              
          ls -R

      - name: Build PlatformIO ESP
        run: pio ci
          --project-conf="tools/interfaces/test_output_cli/pio_ci/platformio.ini"
          --lib="tools/interfaces/test_output_cli/pio_ci/lib/CLI"
          --environment=esp8266
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.examples }}

name: Adafruit platforms (dynamic)

on:
  push:
    branches:
      - main
    paths:
      - "**/examples/**"
      - "**/test_output_cli/**"
  workflow_dispatch:
    branches:
      - main
    paths:
      - "**/examples/**"
      - "**/test_output_cli/**"
  release:
    branches:
      - release
    paths:
      - "**/examples/**"
      - "**/test_output_cli/**"

jobs:
  generate-job-matrices:
    runs-on: ubuntu-latest
    outputs:
      arduino-build-matrix: ${{ steps.set-arduino-matrix.outputs.arduino-build-matrix }}
      platformio-build-matrix: ${{ steps.set-platformio-matrix.outputs.platformio-build-matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - id: set-arduino-matrix
        run: |
          echo -n "arduino-build-matrix=" >> $GITHUB_OUTPUT
          python supported_boards/generate_workflow_matrix.py -c arduino -p adafruit >> $GITHUB_OUTPUT
      - id: set-platformio-matrix
        run: |
          echo -n "platformio-build-matrix=" >> $GITHUB_OUTPUT
          python supported_boards/generate_workflow_matrix.py -c platformio -p adafruit >> $GITHUB_OUTPUT

  build-arduino:
    needs: generate-job-matrices
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false      
    steps:      
      - name: Checkout
        uses: actions/checkout@v3      
      
      - name: Compile examples
        env:
          boards: ${{ fromJSON(needs.generate-job-matrices.outputs.arduino-build-matrix)['boards'] }}    
          examples: ${{ fromJSON(needs.generate-job-matrices.outputs.arduino-build-matrix)['examples'] }}    
        uses: arduino/compile-sketches@main
        with:
          platforms: |
            - source-url: "https://adafruit.github.io/arduino-board-index/package_adafruit_index.json"
              name: "adafruit:samd"
          sketch-paths: $examples
          fqbn: $boards

      - name: Compile test cli
        env:
          matrix: ${{ fromJSON(needs.generate-job-matrices.outputs.arduino-build-matrix) }}    
        uses: arduino/compile-sketches@main
        with:
          platforms: |
            - source-url: "https://adafruit.github.io/arduino-board-index/package_adafruit_index.json"
              name: "adafruit:samd"
          sketch-paths: ${{ matrix.test_cli }}
          fqbn: ${{ matrix.boards }}

  build-platformio:
    needs: generate-job-matrices
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      matrix: ${{ fromJSON(needs.generate-job-matrices.outputs.platformio-build-matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio    
          ls
      - name: Compile examples
        run: pio ci --lib="." --board="${{matrix.boards}}"
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.examples }}

      - name: Compile test cli
        run: pio ci --lib="tools/interfaces/test_output_cli/pio_ci/lib/CLI" --board="${{matrix.boards}}"
        env:
          PLATFORMIO_CI_SRC: ${{ matrix.test_cli }}
